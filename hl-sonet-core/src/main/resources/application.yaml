server:
  port: ${APP_PORT:8080}
  shutdown: immediate
  error.include-stacktrace: never

springdoc:
  show-actuator: true
  swagger-ui.path: /api.html

management:
  endpoints.web.discovery.enabled: false
  endpoint.health:
    cache.time-to-live: 100ms
    probes.enabled: true
    show-details: always
    show-components: always

logging:
  appender: ${LOGGING_APPENDERS:stdout}
  root:
    level: DEBUG
  level:
#    org.springframework.jdbc: DEBUG
    com.sonet: DEBUG

spring:
  application:
    name: hl-sonet-core
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    generate-ddl: false
    hibernate:
      ddl-auto: none
    show-sql: true
    database: postgresql
    properties:
      hibernate:
        generate_statistics: false
      jdbc:
        batch_size: 100
      order_inserts: true
      order_updates: true
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/postgres}
    jdbc-url: ${DB_URL:jdbc:postgresql://localhost:5432/postgres}
    username: ${DB_USER:postgres}
    password: ${DB_PWD:pass}
    driver-class-name: org.postgresql.Driver
    # initialization-mode: always
    hikari:
      maximum-pool-size: ${DB_MAX_CONNECTIONS:100}
      minimum-idle: ${DB_MIN_CONNECTIONS:3}
  datasource-readonly:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/postgres}
    jdbc-url: ${DB_READ_URL:jdbc:postgresql://localhost:5432/postgres}
    username: ${DB_USER:postgres}
    password: ${DB_PWD:pass}
    driver-class-name: org.postgresql.Driver
    # initialization-mode: always
    hikari:
      maximum-pool-size: ${DB_MAX_CONNECTIONS:100}
      minimum-idle: ${DB_MIN_CONNECTIONS:3}
  liquibase:
    enabled: true
    change-log: classpath:/db/evolution/db.changelog-master.yaml
    url: ${DB_URL:jdbc:postgresql://localhost:5432/postgres}
    user: ${DB_USER:postgres}
    password: ${DB_PWD:pass}
  redis:
    database: 0
    host: ${REDIS_HOST:localhost}
    port: 6379
    password:
    timeout: 20000

app:
  jwt:
    secret: megaTopSecret
    expiration: 100500000
    header: Authorization
  redis:
    cache:
      bulk-update-size: 20
      feed-size: 1000
    topics:
      post-create: post-create