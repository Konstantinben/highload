<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>6.4</version>
    <template_groups>
        <template_group>
            <uuid>a571c0d144b14fd4a87a9d9b2aa9fcd6</uuid>
            <name>Templates/Applications</name>
        </template_group>
    </template_groups>
    <templates>
        <template>
            <uuid>72aab08f7f27406a8f2c291648e5ba95</uuid>
            <template>Generic Java JMX</template>
            <name>Generic Java JMX</name>
            <description>Generated by official Zabbix template tool &quot;Templator&quot; 2.0.0</description>
            <vendor>
                <name>Zabbix</name>
                <version>6.4-0</version>
            </vendor>
            <groups>
                <group>
                    <name>Templates/Applications</name>
                </group>
            </groups>
            <items>
                <item>
                    <uuid>d16a651b35234011876b4f0c98126988</uuid>
                    <name>ClassLoading: Loaded class count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=ClassLoading&quot;,&quot;LoadedClassCount&quot;]</key>
                    <history>7d</history>
                    <username>{$JMX.USER}</username>
                    <password>{$JMX.PASSWORD}</password>
                    <description>Displays number of classes that are currently loaded in the Java virtual machine.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>10m</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>class</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>fc79c5ac074f4266a88d5c239fa0fb70</uuid>
                    <name>ClassLoading: Total loaded class count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=ClassLoading&quot;,&quot;TotalLoadedClassCount&quot;]</key>
                    <history>7d</history>
                    <username>{$JMX.USER}</username>
                    <password>{$JMX.PASSWORD}</password>
                    <description>Displays the total number of classes that have been loaded since the Java virtual machine has started execution.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>10m</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>class</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>b7620bdebd044fb1b1d2cb293ea8912c</uuid>
                    <name>ClassLoading: Unloaded class count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=ClassLoading&quot;,&quot;UnloadedClassCount&quot;]</key>
                    <history>7d</history>
                    <username>{$JMX.USER}</username>
                    <password>{$JMX.PASSWORD}</password>
                    <description>Displays the total number of classes that have been loaded since the Java virtual machine has started execution.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>10m</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>class</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>0d6880c07fcd42bebddc41f5f2eb7bdd</uuid>
                    <name>Compilation: Name of the current JIT compiler</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Compilation&quot;,&quot;Name&quot;]</key>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <username>{$JMX.USER}</username>
                    <password>{$JMX.PASSWORD}</password>
                    <description>Displays the total number of classes unloaded since the Java virtual machine has started execution.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>30m</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>compilation</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>691f051584d74995b757b4be5e3824fe</uuid>
                            <expression>find(/Generic Java JMX/jmx[&quot;java.lang:type=Compilation&quot;,&quot;Name&quot;],,&quot;like&quot;,&quot;Client&quot;)=1</expression>
                            <name>Compilation: {HOST.NAME} uses suboptimal JIT compiler</name>
                            <priority>INFO</priority>
                            <manual_close>YES</manual_close>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>notice</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>c097ea2de6034d1d94f528533562b896</uuid>
                    <name>Compilation: Accumulated time spent</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Compilation&quot;,&quot;TotalCompilationTime&quot;]</key>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <username>{$JMX.USER}</username>
                    <password>{$JMX.PASSWORD}</password>
                    <description>Displays the approximate accumulated elapsed time spent in compilation, in seconds.</description>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <parameters>
                                <parameter>0.001</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>10m</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>compilation</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>d98a8d00639742f4b62a29e0c7394d61</uuid>
                    <name>Memory: Heap memory committed</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Memory&quot;,&quot;HeapMemoryUsage.committed&quot;]</key>
                    <history>7d</history>
                    <units>B</units>
                    <username>{$JMX.USER}</username>
                    <password>{$JMX.PASSWORD}</password>
                    <description>Current heap memory allocated. This amount of memory is guaranteed for the Java virtual machine to use.</description>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>e757e0d3d72548df97066632448dd18c</uuid>
                    <name>Memory: Heap memory maximum size</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Memory&quot;,&quot;HeapMemoryUsage.max&quot;]</key>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>B</units>
                    <username>{$JMX.USER}</username>
                    <password>{$JMX.PASSWORD}</password>
                    <description>Maximum amount of heap that can be used for memory management. This amount of memory is not guaranteed to be available if it is greater than the amount of committed memory. The Java virtual machine may fail to allocate memory even if the amount of used memory does not exceed this maximum size.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>10m</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>0c24cd559cd74ddb9ff0b167a3d37c23</uuid>
                    <name>Memory: Heap memory used</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Memory&quot;,&quot;HeapMemoryUsage.used&quot;]</key>
                    <history>7d</history>
                    <units>B</units>
                    <username>{$JMX.USER}</username>
                    <password>{$JMX.PASSWORD}</password>
                    <description>Current memory usage outside the heap.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>10m</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>50bb1ecb0a2141bbba128dfc842a1e34</uuid>
                    <name>Memory: Non-Heap memory committed</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Memory&quot;,&quot;NonHeapMemoryUsage.committed&quot;]</key>
                    <history>7d</history>
                    <units>B</units>
                    <username>{$JMX.USER}</username>
                    <password>{$JMX.PASSWORD}</password>
                    <description>Current memory allocated outside the heap. This amount of memory is guaranteed for the Java virtual machine to use.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>10m</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>0c6301dfec1c4e6c8ab26091e9372e91</uuid>
                    <name>Memory: Non-Heap memory maximum size</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Memory&quot;,&quot;NonHeapMemoryUsage.max&quot;]</key>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>B</units>
                    <username>{$JMX.USER}</username>
                    <password>{$JMX.PASSWORD}</password>
                    <description>Maximum amount of non-heap memory that can be used for memory management. This amount of memory is not guaranteed to be available if it is greater than the amount of committed memory. The Java virtual machine may fail to allocate memory even if the amount of used memory does not exceed this maximum size.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>10m</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>58d2bb1791994cbcacb75d029ed8a21b</uuid>
                    <name>Memory: Non-Heap memory used</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Memory&quot;,&quot;NonHeapMemoryUsage.used&quot;]</key>
                    <history>7d</history>
                    <units>B</units>
                    <username>{$JMX.USER}</username>
                    <password>{$JMX.PASSWORD}</password>
                    <description>Current memory usage outside the heap</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>10m</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>e309472afb794a2c9cd581275931db79</uuid>
                    <name>Memory: Object pending finalization count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Memory&quot;,&quot;ObjectPendingFinalizationCount&quot;]</key>
                    <history>7d</history>
                    <username>{$JMX.USER}</username>
                    <password>{$JMX.PASSWORD}</password>
                    <description>The approximate number of objects for which finalization is pending.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>10m</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>4c847c1239654be7b4f4d03fbb45ea4f</uuid>
                    <name>OperatingSystem: File descriptors maximum count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=OperatingSystem&quot;,&quot;MaxFileDescriptorCount&quot;]</key>
                    <history>7d</history>
                    <username>{$JMX.USER}</username>
                    <password>{$JMX.PASSWORD}</password>
                    <description>This is the number of file descriptors we can have opened in the same process, as determined by the operating system. You can never have more file descriptors than this number.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>10m</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>os</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>f72ee698db964f3c9ce84bbb4a1274d7</uuid>
                    <name>OperatingSystem: File descriptors opened</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=OperatingSystem&quot;,&quot;OpenFileDescriptorCount&quot;]</key>
                    <history>7d</history>
                    <username>{$JMX.USER}</username>
                    <password>{$JMX.PASSWORD}</password>
                    <description>This is the number of opened file descriptors at the moment, if this reaches the MaxFileDescriptorCount, the application will throw an IOException: Too many open files. This could mean you are opening file descriptors and never closing them.</description>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>os</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>3c252493c9304aabbb2930b9a82a1cbf</uuid>
                    <name>OperatingSystem: Process CPU Load</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=OperatingSystem&quot;,&quot;ProcessCpuLoad&quot;]</key>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <username>{$JMX.USER}</username>
                    <password>{$JMX.PASSWORD}</password>
                    <description>ProcessCpuLoad represents the CPU load in this process.</description>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <parameters>
                                <parameter>100</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>os</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>cc6cc7942e434b8589ff28a0b3112fc7</uuid>
                            <expression>min(/Generic Java JMX/jmx[&quot;java.lang:type=OperatingSystem&quot;,&quot;ProcessCpuLoad&quot;],{$JMX.CPU.LOAD.TIME})&gt;{$JMX.CPU.LOAD.MAX}</expression>
                            <name>OperatingSystem: Process CPU Load is high</name>
                            <event_name>OperatingSystem: Process CPU Load more than {$JMX.CPU.LOAD.MAX}% for {$JMX.CPU.LOAD.TIME}</event_name>
                            <priority>AVERAGE</priority>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>capacity</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>00007954da00442b9631e15995ef6cab</uuid>
                    <name>Runtime: JVM uptime</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Runtime&quot;,&quot;Uptime&quot;]</key>
                    <history>7d</history>
                    <username>{$JMX.USER}</username>
                    <password>{$JMX.PASSWORD}</password>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <parameters>
                                <parameter>0.001</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>runtime</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>c82c23dc5be34bb68ec8b152b3be367b</uuid>
                            <expression>nodata(/Generic Java JMX/jmx[&quot;java.lang:type=Runtime&quot;,&quot;Uptime&quot;],5m)=1</expression>
                            <name>Runtime: JVM is not reachable</name>
                            <priority>AVERAGE</priority>
                            <manual_close>YES</manual_close>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>availability</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>e824c36de524425eaac253bcf3a1f3ec</uuid>
                    <name>Runtime: JVM name</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Runtime&quot;,&quot;VmName&quot;]</key>
                    <delay>1h</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <username>{$JMX.USER}</username>
                    <password>{$JMX.PASSWORD}</password>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>30m</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>runtime</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>560edfbeb7654f1eb7315389f08ef1b3</uuid>
                            <expression>find(/Generic Java JMX/jmx[&quot;java.lang:type=Runtime&quot;,&quot;VmName&quot;],,&quot;like&quot;,&quot;Server&quot;)&lt;&gt;1</expression>
                            <name>Runtime: {HOST.NAME} runs suboptimal VM type</name>
                            <priority>INFO</priority>
                            <manual_close>YES</manual_close>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>notice</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>a8675d659349414fa10cc11a1cd4ddd7</uuid>
                    <name>Runtime: JVM version</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Runtime&quot;,&quot;VmVersion&quot;]</key>
                    <delay>1h</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <username>{$JMX.USER}</username>
                    <password>{$JMX.PASSWORD}</password>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>30m</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>runtime</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>f2f0836103ea4358a740abc0010336ca</uuid>
                    <name>Threading: Daemon thread count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Threading&quot;,&quot;DaemonThreadCount&quot;]</key>
                    <history>7d</history>
                    <username>{$JMX.USER}</username>
                    <password>{$JMX.PASSWORD}</password>
                    <description>Number of daemon threads running.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>10m</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>threading</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>1793243b7ed147f1a182876fda905ebc</uuid>
                    <name>Threading: Peak thread count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Threading&quot;,&quot;PeakThreadCount&quot;]</key>
                    <history>7d</history>
                    <username>{$JMX.USER}</username>
                    <password>{$JMX.PASSWORD}</password>
                    <description>Maximum number of threads being executed at the same time since the JVM was started or the peak was reset.</description>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>threading</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>ca198e0473384025aecbc16913800c0c</uuid>
                    <name>Threading: Thread count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Threading&quot;,&quot;ThreadCount&quot;]</key>
                    <history>7d</history>
                    <username>{$JMX.USER}</username>
                    <password>{$JMX.PASSWORD}</password>
                    <description>The number of threads running at the current moment.</description>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>threading</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>9db83653dfa6449c95ffec2b0e6c8b5d</uuid>
                    <name>Threading: Total started thread count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Threading&quot;,&quot;TotalStartedThreadCount&quot;]</key>
                    <history>7d</history>
                    <username>{$JMX.USER}</username>
                    <password>{$JMX.PASSWORD}</password>
                    <description>The number of threads started since the JVM was launched.</description>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>threading</value>
                        </tag>
                    </tags>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <uuid>7e0c60c6b1b34b5c99fa446076f35c28</uuid>
                    <name>Garbage collector discovery</name>
                    <type>JMX</type>
                    <key>jmx.discovery[&quot;beans&quot;,&quot;java.lang:name=*,type=GarbageCollector&quot;]</key>
                    <delay>4h</delay>
                    <username>{$JMX.USER}</username>
                    <password>{$JMX.PASSWORD}</password>
                    <description>Garbage collectors metrics discovery.</description>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>61ad48ae9013481184d33222c7660bef</uuid>
                            <name>GarbageCollector: {#JMXNAME} number of collections per second</name>
                            <type>JMX</type>
                            <key>jmx[&quot;java.lang:name={#JMXNAME},type=GarbageCollector&quot;,&quot;CollectionCount&quot;]</key>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <username>{$JMX.USER}</username>
                            <password>{$JMX.PASSWORD}</password>
                            <description>Displays the total number of collections that have occurred per second.</description>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <parameters>
                                        <parameter/>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                            <tags>
                                <tag>
                                    <tag>collection</tag>
                                    <value>{#JMXNAME}</value>
                                </tag>
                                <tag>
                                    <tag>component</tag>
                                    <value>garbage-collector</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>8e3db2efbe714f918ece15216fae628b</uuid>
                            <name>GarbageCollector: {#JMXNAME} accumulated time spent in collection</name>
                            <type>JMX</type>
                            <key>jmx[&quot;java.lang:name={#JMXNAME},type=GarbageCollector&quot;,&quot;CollectionTime&quot;]</key>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <username>{$JMX.USER}</username>
                            <password>{$JMX.PASSWORD}</password>
                            <description>Displays the approximate accumulated collection elapsed time, in seconds.</description>
                            <preprocessing>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <parameters>
                                        <parameter>0.001</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <parameters>
                                        <parameter>10m</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                            <tags>
                                <tag>
                                    <tag>collection</tag>
                                    <value>{#JMXNAME}</value>
                                </tag>
                                <tag>
                                    <tag>component</tag>
                                    <value>garbage-collector</value>
                                </tag>
                            </tags>
                        </item_prototype>
                    </item_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <uuid>4794916f3ad84955a5406f9c6aea2792</uuid>
                            <name>GarbageCollector: Garbage Collector {#JMXNAME} collections per second</name>
                            <graph_items>
                                <graph_item>
                                    <color>199C0D</color>
                                    <item>
                                        <host>Generic Java JMX</host>
                                        <key>jmx[&quot;java.lang:name={#JMXNAME},type=GarbageCollector&quot;,&quot;CollectionCount&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </discovery_rule>
                <discovery_rule>
                    <uuid>b5dfe8bb0a754289a716092ad305ceed</uuid>
                    <name>Memory pool discovery</name>
                    <type>JMX</type>
                    <key>jmx.discovery[&quot;beans&quot;,&quot;java.lang:name=*,type=MemoryPool&quot;]</key>
                    <delay>4h</delay>
                    <username>{$JMX.USER}</username>
                    <password>{$JMX.PASSWORD}</password>
                    <filter>
                        <conditions>
                            <condition>
                                <macro>{#JMXNAME}</macro>
                                <value>{$JMX.MEM.POOL.NAME.MATCHES}</value>
                                <formulaid>A</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>Memory pools metrics discovery.</description>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>8b3da0f9b0b64b58b25ffed71a679ed0</uuid>
                            <name>Memory pool: {#JMXNAME} committed</name>
                            <type>JMX</type>
                            <key>jmx[&quot;java.lang:name={#JMXNAME},type=MemoryPool&quot;,&quot;Usage.committed&quot;]</key>
                            <history>7d</history>
                            <units>B</units>
                            <username>{$JMX.USER}</username>
                            <password>{$JMX.PASSWORD}</password>
                            <description>Current memory allocated.</description>
                            <preprocessing>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <parameters>
                                        <parameter>10m</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>memory</value>
                                </tag>
                                <tag>
                                    <tag>pool</tag>
                                    <value>{#JMXNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>f8504be0098b41a6b789c67f88f1c861</uuid>
                            <name>Memory pool: {#JMXNAME} maximum size</name>
                            <type>JMX</type>
                            <key>jmx[&quot;java.lang:name={#JMXNAME},type=MemoryPool&quot;,&quot;Usage.max&quot;]</key>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>B</units>
                            <username>{$JMX.USER}</username>
                            <password>{$JMX.PASSWORD}</password>
                            <description>Maximum amount of memory that can be used for memory management. This amount of memory is not guaranteed to be available if it is greater than the amount of committed memory. The Java virtual machine may fail to allocate memory even if the amount of used memory does not exceed this maximum size.</description>
                            <preprocessing>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <parameters>
                                        <parameter>10m</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>memory</value>
                                </tag>
                                <tag>
                                    <tag>pool</tag>
                                    <value>{#JMXNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>74f11991286a474b838898036ebb82e5</uuid>
                            <name>Memory pool: {#JMXNAME} used</name>
                            <type>JMX</type>
                            <key>jmx[&quot;java.lang:name={#JMXNAME},type=MemoryPool&quot;,&quot;Usage.used&quot;]</key>
                            <history>7d</history>
                            <units>B</units>
                            <username>{$JMX.USER}</username>
                            <password>{$JMX.PASSWORD}</password>
                            <description>Current memory usage.</description>
                            <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>memory</value>
                                </tag>
                                <tag>
                                    <tag>pool</tag>
                                    <value>{#JMXNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <uuid>60a9825fc01f4cc9bd79d306bb19e8e0</uuid>
                            <expression>min(/Generic Java JMX/jmx[&quot;java.lang:name={#JMXNAME},type=MemoryPool&quot;,&quot;Usage.used&quot;],{$JMX.MP.USAGE.TIME:&quot;{#JMXNAME}&quot;})&gt;(last(/Generic Java JMX/jmx[&quot;java.lang:name={#JMXNAME},type=MemoryPool&quot;,&quot;Usage.max&quot;])*{$JMX.MP.USAGE.MAX:&quot;{#JMXNAME}&quot;}/100) and last(/Generic Java JMX/jmx[&quot;java.lang:name={#JMXNAME},type=MemoryPool&quot;,&quot;Usage.max&quot;])&gt;0</expression>
                            <name>Memory pool: {#JMXNAME} memory usage is high</name>
                            <event_name>Memory pool: {#JMXNAME} memory usage more than {$JMX.MP.USAGE.MAX:&quot;{#JMXNAME}&quot;}% for {$JMX.MP.USAGE.TIME:&quot;{#JMXNAME}&quot;}</event_name>
                            <priority>WARNING</priority>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>capacity</value>
                                </tag>
                            </tags>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <uuid>70552d982dfa4455ac8c5c5c847f6248</uuid>
                            <name>Memory pool: Memory pool {#JMXNAME}</name>
                            <graph_items>
                                <graph_item>
                                    <color>199C0D</color>
                                    <item>
                                        <host>Generic Java JMX</host>
                                        <key>jmx[&quot;java.lang:name={#JMXNAME},type=MemoryPool&quot;,&quot;Usage.max&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>F63100</color>
                                    <item>
                                        <host>Generic Java JMX</host>
                                        <key>jmx[&quot;java.lang:name={#JMXNAME},type=MemoryPool&quot;,&quot;Usage.committed&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <color>00611C</color>
                                    <item>
                                        <host>Generic Java JMX</host>
                                        <key>jmx[&quot;java.lang:name={#JMXNAME},type=MemoryPool&quot;,&quot;Usage.used&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </discovery_rule>
            </discovery_rules>
            <tags>
                <tag>
                    <tag>class</tag>
                    <value>software</value>
                </tag>
                <tag>
                    <tag>target</tag>
                    <value>java</value>
                </tag>
            </tags>
            <macros>
                <macro>
                    <macro>{$JMX.CPU.LOAD.MAX}</macro>
                    <value>85</value>
                    <description>A threshold in percent for CPU utilization trigger.</description>
                </macro>
                <macro>
                    <macro>{$JMX.CPU.LOAD.TIME}</macro>
                    <value>5m</value>
                    <description>The time during which the CPU utilization may exceed the threshold.</description>
                </macro>
                <macro>
                    <macro>{$JMX.FILE.DESCRIPTORS.MAX}</macro>
                    <value>85</value>
                    <description>A threshold in percent for file descriptors count trigger.</description>
                </macro>
                <macro>
                    <macro>{$JMX.FILE.DESCRIPTORS.TIME}</macro>
                    <value>3m</value>
                    <description>The time during which the file descriptors count may exceed the threshold.</description>
                </macro>
                <macro>
                    <macro>{$JMX.HEAP.MEM.USAGE.MAX}</macro>
                    <value>85</value>
                    <description>A threshold in percent for Heap memory utilization trigger.</description>
                </macro>
                <macro>
                    <macro>{$JMX.HEAP.MEM.USAGE.TIME}</macro>
                    <value>10m</value>
                    <description>The time during which the Heap memory utilization may exceed the threshold.</description>
                </macro>
                <macro>
                    <macro>{$JMX.MEM.POOL.NAME.MATCHES}</macro>
                    <value>Old Gen|G1|Perm Gen|Code Cache|Tenured Gen</value>
                    <description>This macro used in memory pool discovery as a filter.</description>
                </macro>
                <macro>
                    <macro>{$JMX.MP.USAGE.MAX}</macro>
                    <value>85</value>
                    <description>A threshold in percent for memory pools utilization trigger. Use a context to change the threshold for a specific pool.</description>
                </macro>
                <macro>
                    <macro>{$JMX.MP.USAGE.TIME}</macro>
                    <value>10m</value>
                    <description>The time during which the memory pools utilization may exceed the threshold.</description>
                </macro>
                <macro>
                    <macro>{$JMX.NONHEAP.MEM.USAGE.MAX}</macro>
                    <value>85</value>
                    <description>A threshold in percent for Non-heap memory utilization trigger.</description>
                </macro>
                <macro>
                    <macro>{$JMX.NONHEAP.MEM.USAGE.TIME}</macro>
                    <value>10m</value>
                    <description>The time during which the Non-heap memory utilization may exceed the threshold.</description>
                </macro>
                <macro>
                    <macro>{$JMX.PASSWORD}</macro>
                    <description>JMX password.</description>
                </macro>
                <macro>
                    <macro>{$JMX.USER}</macro>
                    <description>JMX username.</description>
                </macro>
            </macros>
            <dashboards>
                <dashboard>
                    <uuid>5fe21df982614cba90093a8d948b34b2</uuid>
                    <name>Java: Overview</name>
                    <pages>
                        <page>
                            <name>General</name>
                            <widgets>
                                <widget>
                                    <type>graph</type>
                                    <width>12</width>
                                    <height>5</height>
                                    <fields>
                                        <field>
                                            <type>GRAPH</type>
                                            <name>graphid</name>
                                            <value>
                                                <host>Generic Java JMX</host>
                                                <name>Threading: Threads</name>
                                            </value>
                                        </field>
                                    </fields>
                                </widget>
                                <widget>
                                    <type>graph</type>
                                    <x>12</x>
                                    <width>12</width>
                                    <height>5</height>
                                    <fields>
                                        <field>
                                            <type>GRAPH</type>
                                            <name>graphid</name>
                                            <value>
                                                <host>Generic Java JMX</host>
                                                <name>OperatingSystem: File Descriptors</name>
                                            </value>
                                        </field>
                                    </fields>
                                </widget>
                                <widget>
                                    <type>graph</type>
                                    <y>5</y>
                                    <width>12</width>
                                    <height>5</height>
                                    <fields>
                                        <field>
                                            <type>GRAPH</type>
                                            <name>graphid</name>
                                            <value>
                                                <host>Generic Java JMX</host>
                                                <name>ClassLoading: Class Loader</name>
                                            </value>
                                        </field>
                                    </fields>
                                </widget>
                            </widgets>
                        </page>
                        <page>
                            <name>Memory</name>
                            <widgets>
                                <widget>
                                    <type>graphprototype</type>
                                    <width>24</width>
                                    <height>15</height>
                                    <fields>
                                        <field>
                                            <type>INTEGER</type>
                                            <name>columns</name>
                                            <value>2</value>
                                        </field>
                                        <field>
                                            <type>INTEGER</type>
                                            <name>rows</name>
                                            <value>3</value>
                                        </field>
                                        <field>
                                            <type>GRAPH_PROTOTYPE</type>
                                            <name>graphid</name>
                                            <value>
                                                <host>Generic Java JMX</host>
                                                <name>Memory pool: Memory pool {#JMXNAME}</name>
                                            </value>
                                        </field>
                                    </fields>
                                </widget>
                            </widgets>
                        </page>
                        <page>
                            <name>Garbage Collectors</name>
                            <widgets>
                                <widget>
                                    <type>graphprototype</type>
                                    <width>24</width>
                                    <height>15</height>
                                    <fields>
                                        <field>
                                            <type>INTEGER</type>
                                            <name>columns</name>
                                            <value>2</value>
                                        </field>
                                        <field>
                                            <type>INTEGER</type>
                                            <name>rows</name>
                                            <value>3</value>
                                        </field>
                                        <field>
                                            <type>GRAPH_PROTOTYPE</type>
                                            <name>graphid</name>
                                            <value>
                                                <host>Generic Java JMX</host>
                                                <name>GarbageCollector: Garbage Collector {#JMXNAME} collections per second</name>
                                            </value>
                                        </field>
                                    </fields>
                                </widget>
                            </widgets>
                        </page>
                    </pages>
                </dashboard>
            </dashboards>
        </template>
    </templates>
    <triggers>
        <trigger>
            <uuid>69fda060b5004d12b6af0ba5f73cec6d</uuid>
            <expression>min(/Generic Java JMX/jmx[&quot;java.lang:type=Memory&quot;,&quot;HeapMemoryUsage.used&quot;],{$JMX.HEAP.MEM.USAGE.TIME})&gt;(last(/Generic Java JMX/jmx[&quot;java.lang:type=Memory&quot;,&quot;HeapMemoryUsage.max&quot;])*{$JMX.HEAP.MEM.USAGE.MAX}/100) and last(/Generic Java JMX/jmx[&quot;java.lang:type=Memory&quot;,&quot;HeapMemoryUsage.max&quot;])&gt;0</expression>
            <name>Memory: Heap memory usage is high</name>
            <event_name>Memory: Heap memory usage more than {$JMX.HEAP.USAGE.MAX}% for {$JMX.HEAP.MEM.USAGE.TIME}</event_name>
            <priority>WARNING</priority>
            <tags>
                <tag>
                    <tag>scope</tag>
                    <value>capacity</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <uuid>2b4dfda1100d4feeaa66218e57786f38</uuid>
            <expression>min(/Generic Java JMX/jmx[&quot;java.lang:type=Memory&quot;,&quot;NonHeapMemoryUsage.used&quot;],{$JMX.NONHEAP.MEM.USAGE.TIME})&gt;(last(/Generic Java JMX/jmx[&quot;java.lang:type=Memory&quot;,&quot;NonHeapMemoryUsage.max&quot;])*{$JMX.NONHEAP.MEM.USAGE.MAX}/100) and last(/Generic Java JMX/jmx[&quot;java.lang:type=Memory&quot;,&quot;NonHeapMemoryUsage.max&quot;])&gt;0</expression>
            <name>Memory: Non-Heap memory usage is high</name>
            <event_name>Memory: Non-Heap memory usage more than {$JMX.NONHEAP.MEM.USAGE.MAX}% for {$JMX.NONHEAP.MEM.USAGE.TIME}</event_name>
            <priority>WARNING</priority>
            <tags>
                <tag>
                    <tag>scope</tag>
                    <value>capacity</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <uuid>726a3b8a6209451b9a6cca63a3195a0c</uuid>
            <expression>min(/Generic Java JMX/jmx[&quot;java.lang:type=OperatingSystem&quot;,&quot;OpenFileDescriptorCount&quot;],{$JMX.FILE.DESCRIPTORS.TIME})&gt;(last(/Generic Java JMX/jmx[&quot;java.lang:type=OperatingSystem&quot;,&quot;MaxFileDescriptorCount&quot;])*{$JMX.FILE.DESCRIPTORS.MAX}/100)</expression>
            <name>OperatingSystem: Opened file descriptor count is high</name>
            <event_name>OperatingSystem: Opened file descriptor count more than {$JMX.FILE.DESCRIPTORS.MAX}% of maximum</event_name>
            <priority>WARNING</priority>
            <tags>
                <tag>
                    <tag>scope</tag>
                    <value>capacity</value>
                </tag>
            </tags>
        </trigger>
    </triggers>
    <graphs>
        <graph>
            <uuid>69184fc10a914cc78637625cc6cc554c</uuid>
            <name>ClassLoading: Class Loader</name>
            <graph_items>
                <graph_item>
                    <color>199C0D</color>
                    <item>
                        <host>Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=ClassLoading&quot;,&quot;TotalLoadedClassCount&quot;]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=ClassLoading&quot;,&quot;UnloadedClassCount&quot;]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>00611C</color>
                    <item>
                        <host>Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=ClassLoading&quot;,&quot;LoadedClassCount&quot;]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <uuid>39c14cff77694bddb836b63609d9ae92</uuid>
            <name>OperatingSystem: File Descriptors</name>
            <graph_items>
                <graph_item>
                    <color>199C0D</color>
                    <item>
                        <host>Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=OperatingSystem&quot;,&quot;MaxFileDescriptorCount&quot;]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=OperatingSystem&quot;,&quot;OpenFileDescriptorCount&quot;]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <uuid>397d90097f3f4237ac45d929ffd513e5</uuid>
            <name>Threading: Threads</name>
            <graph_items>
                <graph_item>
                    <color>199C0D</color>
                    <item>
                        <host>Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=Threading&quot;,&quot;PeakThreadCount&quot;]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=Threading&quot;,&quot;DaemonThreadCount&quot;]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>00611C</color>
                    <item>
                        <host>Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=Threading&quot;,&quot;ThreadCount&quot;]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
    </graphs>
</zabbix_export>
